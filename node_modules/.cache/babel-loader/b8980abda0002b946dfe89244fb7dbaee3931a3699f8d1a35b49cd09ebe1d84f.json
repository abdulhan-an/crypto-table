{"ast":null,"code":"export const processCryptoData = (cryptoData, currencyRates) => {\n  return cryptoData.map(crypto => {\n    const usdPrice = parseFloat(crypto.priceUsd);\n    return {\n      id: crypto.id,\n      rank: crypto.rank,\n      symbol: crypto.symbol,\n      name: crypto.name,\n      website: `https://coincap.io/assets/${crypto.id}`,\n      priceUsd: usdPrice.toFixed(2),\n      priceGbp: (usdPrice * currencyRates.GBP).toFixed(2),\n      priceEur: (usdPrice * currencyRates.EUR).toFixed(2),\n      priceAed: (usdPrice * currencyRates.AED).toFixed(2)\n    };\n  });\n};","map":{"version":3,"names":["processCryptoData","cryptoData","currencyRates","map","crypto","usdPrice","parseFloat","priceUsd","id","rank","symbol","name","website","toFixed","priceGbp","GBP","priceEur","EUR","priceAed","AED"],"sources":["/Users/abdulhanan/crypto-table/src/utils/dataProcessor.js"],"sourcesContent":["export const processCryptoData = (cryptoData, currencyRates) => {\n    return cryptoData.map((crypto) => {\n      const usdPrice = parseFloat(crypto.priceUsd);\n      return {\n        id: crypto.id,\n        rank: crypto.rank,\n        symbol: crypto.symbol,\n        name: crypto.name,\n        website: `https://coincap.io/assets/${crypto.id}`,\n        priceUsd: usdPrice.toFixed(2),\n        priceGbp: (usdPrice * currencyRates.GBP).toFixed(2),\n        priceEur: (usdPrice * currencyRates.EUR).toFixed(2),\n        priceAed: (usdPrice * currencyRates.AED).toFixed(2),\n      };\n    });\n  };\n  "],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAGA,CAACC,UAAU,EAAEC,aAAa,KAAK;EAC5D,OAAOD,UAAU,CAACE,GAAG,CAAEC,MAAM,IAAK;IAChC,MAAMC,QAAQ,GAAGC,UAAU,CAACF,MAAM,CAACG,QAAQ,CAAC;IAC5C,OAAO;MACLC,EAAE,EAAEJ,MAAM,CAACI,EAAE;MACbC,IAAI,EAAEL,MAAM,CAACK,IAAI;MACjBC,MAAM,EAAEN,MAAM,CAACM,MAAM;MACrBC,IAAI,EAAEP,MAAM,CAACO,IAAI;MACjBC,OAAO,EAAE,6BAA6BR,MAAM,CAACI,EAAE,EAAE;MACjDD,QAAQ,EAAEF,QAAQ,CAACQ,OAAO,CAAC,CAAC,CAAC;MAC7BC,QAAQ,EAAE,CAACT,QAAQ,GAAGH,aAAa,CAACa,GAAG,EAAEF,OAAO,CAAC,CAAC,CAAC;MACnDG,QAAQ,EAAE,CAACX,QAAQ,GAAGH,aAAa,CAACe,GAAG,EAAEJ,OAAO,CAAC,CAAC,CAAC;MACnDK,QAAQ,EAAE,CAACb,QAAQ,GAAGH,aAAa,CAACiB,GAAG,EAAEN,OAAO,CAAC,CAAC;IACpD,CAAC;EACH,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}